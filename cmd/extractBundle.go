package cmd

import (
	"io/ioutil"
	"os"

	"github.com/spf13/cobra"
)

var extractBundleCmdOpts = &extractManifestsCmdOptions{}

var extractBundleCmd = &cobra.Command{
	Use:   "extract-bundle",
	Short: "Extract OLM Bundle",
	Long: `Extract manifests to a specified directory using an OLM bundle as input.

Example Usage:

# Extract manifests to a specified directory from an OLM bundle
export SRC_IMAGE=<replace_me_with_image_string>
export EXTRACT_DIR=<replace_me_with_valid_directory>
./delorean ews extract-bundle --src-image $SRC_IMAGE --extract-dir $EXTRACT_DIR`,
	Run: func(cmd *cobra.Command, args []string) {
		// generate the tmp dir where to extract the manifests if not specified from the cmd flags
		if extractBundleCmdOpts.extractDir == "" {
			tmpDir, err := ioutil.TempDir(os.TempDir(), "bundle-")
			if err != nil {
				handleError(err)
			}

			extractBundleCmdOpts.extractDir = tmpDir
		}

		if err := DoExtractManifests(cmd.Context(), ocExtractImage("/"), extractBundleCmdOpts); err != nil {
			handleError(err)
		}
	},
}

func init() {
	extractBundleCmd.Flags().StringVarP(&extractBundleCmdOpts.srcImage, "src-image", "i", "", "Source container image. Image must be in bundle format")
	extractBundleCmd.Flags().StringVarP(&extractBundleCmdOpts.extractDir, "extract-dir", "e", "", "Extraction directory; the manifests will be inserted here. The directory will be autogenerated by default")
	ewsCmd.AddCommand(extractBundleCmd)
}
